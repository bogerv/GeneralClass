<Controls:MetroWindow x:Class="GenGuidDate.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:GenGuidDate"
        xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:Behaviours="clr-namespace:MahApps.Metro.Behaviours;assembly=MahApps.Metro"
        Title="MainWindow" Height="450" Width="500" Icon="bogerv.ico"
        ResizeMode="CanResizeWithGrip"
        BorderThickness="1"
        BorderBrush="{DynamicResource AccentBaseColorBrush}"
        WindowStartupLocation="CenterScreen"
        WindowState="Maximized"
        UseNoneWindowStyle="False" 
        IgnoreTaskbarOnMaximize="True" >
    <!--UseNoneWindowStyle: 是否显示程序顶层按钮-->
    <!--IgnoreTaskbarOnMaximize: 是否显示桌面工具栏-->
    <i:Interaction.Behaviors>
        <Behaviours:BorderlessWindowBehavior />
    </i:Interaction.Behaviors>
    
    <Controls:MetroWindow.Resources>
        <ResourceDictionary>
            <Style x:Key="FontAwesome">
                <Setter Property="TextElement.FontFamily" Value="pack://application:,,,/#FontAwesome" />
                <Setter Property="TextBlock.Width" Value="100"></Setter>
                <Setter Property="TextBlock.Height" Value="100"></Setter>
                <Setter Property="TextBlock.TextAlignment" Value="Center"></Setter>
                <Setter Property="TextBlock.FontSize" Value="60"></Setter>
                <Setter Property="TextBlock.Foreground" Value="Green"></Setter>
            </Style>
            <Style x:Key="CustomLightMinButtonStyle"
               BasedOn="{StaticResource LightMetroWindowButtonStyle}"
               TargetType="{x:Type Button}">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="DarkGreen" />
                        <Setter Property="Foreground" Value="{DynamicResource WhiteBrush}" />
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Background" Value="Green" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="CustomDarkMinButtonStylee"
               BasedOn="{StaticResource DarkMetroWindowButtonStyle}"
               TargetType="{x:Type Button}">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="DarkGreen" />
                        <Setter Property="Foreground" Value="{DynamicResource WhiteBrush}" />
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Background" Value="Green" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="CustomLightMaxButtonStyle"
               BasedOn="{StaticResource LightMetroWindowButtonStyle}"
               TargetType="{x:Type Button}">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="DarkGoldenrod" />
                        <Setter Property="Foreground" Value="{DynamicResource WhiteBrush}" />
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Background" Value="Yellow" />
                        <Setter Property="Foreground" Value="{DynamicResource BlackBrush}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="CustomDarkMaxButtonStylee"
               BasedOn="{StaticResource DarkMetroWindowButtonStyle}"
               TargetType="{x:Type Button}">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="DarkGoldenrod" />
                        <Setter Property="Foreground" Value="{DynamicResource WhiteBrush}" />
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Background" Value="Yellow" />
                        <Setter Property="Foreground" Value="{DynamicResource BlackBrush}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="CustomLightCloseButtonStyle"
               BasedOn="{StaticResource LightMetroWindowButtonStyle}"
               TargetType="{x:Type Button}">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="DarkRed" />
                        <Setter Property="Foreground" Value="{DynamicResource WhiteBrush}" />
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Background" Value="Red" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="CustomDarkCloseButtonStylee"
               BasedOn="{StaticResource DarkMetroWindowButtonStyle}"
               TargetType="{x:Type Button}">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="DarkRed" />
                        <Setter Property="Foreground" Value="{DynamicResource WhiteBrush}" />
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Background" Value="Red" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </Controls:MetroWindow.Resources>

    <Controls:MetroWindow.RightWindowCommands>
        <Controls:WindowCommands>
            <Button Content="settings" Click="NormalClick"/>
            <Button Click="ChangeAppStyleButtonClick">
                <StackPanel Orientation="Horizontal">
                    <Rectangle Width="20"
                   Height="20"
                   Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_cog}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                    <TextBlock Margin="4 0 0 0"
                   VerticalAlignment="Center"
                   Text="deploy cupcakes" />
                </StackPanel>
            </Button>
        </Controls:WindowCommands>
    </Controls:MetroWindow.RightWindowCommands>

    <StackPanel>
        <TextBox x:Name="guidNum" Height="23" TextWrapping="Wrap" />
        <Controls:Tile Title="" 
                    TiltFactor="2"
                    Width="50" Height="50" 
                    Count="Generate" TitleFontSize="10" CountFontSize="10" HorizontalAlignment="Left"  FlowDirection="LeftToRight" Margin="2" Click="button_Click">
        </Controls:Tile>
        <Controls:Tile Title="" 
                    TiltFactor="3"
                    Width="50" Height="50" 
                    Count="New" TitleFontSize="10" CountFontSize="10" HorizontalAlignment="Left" Margin="2"  FlowDirection="LeftToRight" Click="NewWindow_Click">
        </Controls:Tile>

        <StackPanel>
            <Rectangle Height="20" Width="20" HorizontalAlignment="Left">
                <Rectangle.Fill>
                    <VisualBrush Visual="{StaticResource appbar_add}" />
                </Rectangle.Fill>
            </Rectangle>
        </StackPanel>
        <DataGrid ItemsSource="{Binding People}" Name="guidList"  ScrollViewer.VerticalScrollBarVisibility="Auto" Height="300">
            <DataGrid.Columns>
                <DataGridCheckBoxColumn ElementStyle="{DynamicResource MetroDataGridCheckBox}"
                                        EditingElementStyle="{DynamicResource MetroDataGridCheckBox}"
                                        Header="IsSelected"
                                        Binding="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow}, Path=IsSelected, Mode=OneWay}"
                                        />
            </DataGrid.Columns>
        </DataGrid>

        <WrapPanel Margin="12">
            <TextBlock Text="&#xf01a;" Style="{DynamicResource FontAwesome}" />
        </WrapPanel>
    </StackPanel>
    
    <controls:MetroWindow.WindowButtonCommands>
        <controls:WindowButtonCommands Minimize="A custom Tooltip which will be shown on Min button"
                                       Maximize="Maximize the window"
                                       Restore="Restore the window"
                                       Close="Noooo... don't close me!"
                                       LightMinButtonStyle="{StaticResource CustomLightMinButtonStyle}"
                                       LightMaxButtonStyle="{StaticResource CustomLightMaxButtonStyle}"
                                       LightCloseButtonStyle="{StaticResource CustomLightCloseButtonStyle}"
                                       DarkMinButtonStyle="{StaticResource CustomDarkMinButtonStylee}"
                                       DarkMaxButtonStyle="{StaticResource CustomDarkMaxButtonStylee}"
                                       DarkCloseButtonStyle="{StaticResource CustomDarkCloseButtonStylee}" />
    </controls:MetroWindow.WindowButtonCommands>
</Controls:MetroWindow>